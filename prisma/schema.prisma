// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AuthUser {
  id           String    @id @unique
  name         String
  username     String @unique
  role         Role
  auth_session AuthSession[]
  auth_key     AuthKey[]

  @@map("auth_user")
}

model AuthSession {
  id             String	@id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  slug String
  items Item[]

  @@index([name, slug])
  @@map("category")
}

model Item {
  id Int @id @default(autoincrement())
  name String
  price Float
  stock Int
  sold Int
  category_id Int
  category Category @relation(fields: [category_id], references: [id])
  orders Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name, category_id])
  @@map("item")
}

model Order {
  id Int @id @default(autoincrement())
  name String
  phone String
  email String?
  items Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  @@index([name, phone, email])
  @@map("order")
}

enum Role {
  ADMIN
  MANAGER
  USER
}